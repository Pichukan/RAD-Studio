unit WordActivate;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, System.Win.ComObj, Winapi.ActiveX, TlHelp32, ShellAPI,
  Vcl.Samples.Spin;

type
  TForm1 = class(TForm)
    Button1: TButton;
    Button2: TButton;
    OpenDialog1: TOpenDialog;

    procedure Button1Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);

  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;
  WRD,Book: OleVariant;
  EXC,MyBook,MyWorkSheet,MyRange,MyRange2,Shp,vstart,vend: OleVariant;
  var W:variant;
  i:Integer;
  var DIRFName: string;
  var DIRName: string;
   var DIRExName: string;
implementation

{$R *.dfm}


function GetProcessByEXE(exename: string): THandle;
var
  hSnapshoot: THandle;
  pe32: TProcessEntry32;
begin
  Result:= 0;
  hSnapshoot:= CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, 0);
  if (hSnapshoot = 0) then Exit;
  pe32.dwSize:= SizeOf(TProcessEntry32);
  if (Process32First(hSnapshoot, pe32)) then
    repeat
      if (pe32.szExeFile = exename) then
      begin
        Result:= pe32.th32ProcessID;
        exit;
      end;
    until not Process32Next(hSnapshoot, pe32);
end;


function  ExistExcel: Boolean;
   var
   ID:TCLSID;
   Res: HRESULT;
begin
    Res:= CLSIDFromProgID('Excel.Application',ID);
     if Res=S_OK then
     Result:= True
     else
     Result:= False;
end;




function  ExistWORD: Boolean;
   var
   ID:TCLSID;
   Res: HRESULT;
begin
    Res:= CLSIDFromProgID('Word.Application',ID);
     if Res=S_OK then
     Result:= True
     else
     Result:= False;
end;



function RunExcel: Boolean;
begin

  if GetProcessByEXE('Excel.EXE')<>0 then

  begin
  EXC:=GetActiveOLEObject('Excel.Application');
  Result:=true;
  end
  else
  Result:= false;
  end;



function RunWORD: Boolean;
begin

  if GetProcessByEXE('WORD.EXE')<>0 then

  begin
  WRD:=GetActiveOLEObject('Word.Application');
  Result:=true;
  end
  else
  Result:= false;
  end;

  function StartExcel: boolean;
 begin
    if ExistExcel then
    begin
    if RunExcel=false then
    EXC:=CreateOleObject('Excel.Application');
    result:=True;
    end
    else
    begin
    ShowMessage('Майкрософт Excel не установлен на данном компютере');
     result:=False;
    end;
 end;



 function StartWORD: boolean;
 begin
    if ExistWORD then
    begin
    if RunWORD=false then
    WRD:=CreateOleObject('Word.Application');
    result:=True;
    end
    else
    begin
    ShowMessage('Майкрософт WORD не установлен на данном компютере');
     result:=False;
    end;
 end;


 function DIRDetect: string;    //определяется директория с названием файла
                                //без расширения  но с точкой
 var

 Smb      : Char;
 i        : Integer;
 DIRECTORY: string;

 begin
   DIRECTORY:=' ';
    {len:=Length(DIRFName);

       for I := 1 to len do
          begin
           Smb:=DIRFname[i];
           if Smb='.' then

          end;
      }
        i:=2;
        DIRECTORY:=DIRFname[1];
        while (Smb<>'.') do
          begin
          Smb:=DIRFname[i];
          DIRECTORY:=DIRECTORY+Smb;
          i:=i+1;
          end;
       result:=DIRECTORY;


  {  if ExistWORD then
    begin
    if RunWORD=false then
    WRD:=CreateOleObject('Word.Application');
    result:=True;
    end
    else
    begin
    ShowMessage('Майкрософт WORD не установлен на данном компютере');
     result:=False;
    end;
  }
 end;


 // *****************************************************************

  function FindInDoc(const aWdDoc : Variant; const aSearchText : String) : Variant;
const
  wdFindStop = 0; //Завершить поиск при достижении границы диапазона.
var
  wdRng, wdFind : Variant;
begin
  VarClear(Result);
  //Диапазон, охватывающий всё содержимое документа.
  wdRng := aWdDoc.Content;

  //Настройка поиска.
  wdFind := wdRng.Find;
  //wdFind.ClearFormatting;
  wdFind.Text := aSearchText;
  //True - поиск вести от начала - к концу диапазона.
  wdFind.Forward := True;
  //wdFindStop - завершить поиск при достижении границы диапазона.
  //wdFind.Wrap := wdFindStop;

  //Поиск текста.
  if wdFind.Execute then Result := wdRng;
end;



//****************************************************************************





 procedure ActExcelOpenDoc;
begin
  //if not OpenDialog1.Execute then Exit;  //тут открывается диалог выбора файла, и если пользователь нажал "Cancel", то выходим
 // W:=CreateOLEObject('Excel.Application');  //запускается сервер автоматизации
  if StartExcel then
   begin
    ShowMessage('Процесс Excel запущен');
   end;

  EXC.visible:=true;     //делаем Excel видимым
  DIRExName:=DIRName+'xlsm';
  MyBook:= EXC.WorkBooks.Open(DIRExName);  //Открываем документ, выбранный в диалоге
 // EXC.Range['B2']:='Привет!';   //проба пера до ячейки
 // MyRange:=EXC.Range['A1:g4'];
 // MyRange.Copy;
  {
    MyRange:=EXC.Range['A2'];
    MyRange.Copy;
    MyRange2:=EXC.Range['h1'];
   }
 //   EXC.Run('М2');

   // MyRange2.Paste;
    // MyRange2.Paste;

  ShowMessage(DIRExName);   //Показывает директорию открытого файла с именем и расширением

end;

procedure TableAsPicturePaste;
begin

 EXC.Run('ТаблКакРис');
 //MyRange:=EXC.Range['M1'];
 //MyRange.Copy;

 //MyBook:= EXC.WorkBooks.Open(DIRExName);
  ShowMessage('Рис НОРМ0');
 MyWorkSheet:=EXC.ActiveSheet;
 Shp := MyWorkSheet.Shapes.Item(1);
 Shp.Copy;










    MyRange:=EXC.Range['a2'];
  //  MyRange.Copy;
    MyRange2:=EXC.Range['h1'];
     Book.Range(1,10).Paste;
  ShowMessage('Рис НОРМ');

 // WRD.Selection.Find.Text:='***';
  //WRD.Selection.Paste;

   MyRange2 := FindInDoc(Book, '***');
  if VarIsClear(MyRange2) then begin
    ShowMessage('Текст НЕ найден.');
    Exit;
  end;

  ShowMessage('Текст найден.');

  //Выделяем найденный текст.
  MyRange2.Select;
  ShowMessage('Рис НОРМ3');
  //Прокручиваем содержимое документа (в первом окне) таким образом, чтобы стал
  //видимым участок с найденным текстом.
  //MyRange2.Windows.Item(1).ScrollIntoView(wdRng);

  //Можно выполнить какие-нибудь действия с найденным текстом.
  //Например, пометим найденный текст жирным красным шрифтом.
  //MyRange2.Font.Bold := True;
  //MyRange2.Font.Color := RGB(255, 100, 100);

    MyRange2.Paste;
    ShowMessage('Рис НОРМ4');







  {
  Book.Range(1,10).Paste;
  Book.Range(30,40).cut;
  ShowMessage('Рис НОРМ2');
  i:=1;
  vstart := 2;
  vend := 10;
  Book.Frames.Add(Book.Range(vstart, vend));
  ShowMessage('Рис НОРМ3');
  Book.Frames.Item(i).Height := 2;
  Book.Frames.Item(i).Width := 1;
   }

 {vstart := 1;
  vend := 2;
  WordDocument1.Frames.Add(WordDocument1.Range(vstart, vend));
  i := 1;
  WordDocument1.Frames.Item(i).Height := DBImage1.Height;
  WordDocument1.Frames.Item(i).Width := DBImage1.Width;
  WordDocument1.Frames.Item(i).Select ;
  WordApplication1.Selection.Paste;
  }

end;




procedure TForm1.Button1Click(Sender: TObject);

begin
 {
  if ExistWORD then
                ShowMessage('WORD установлен на данном компьютере')
                else
                ShowMessage('WORD отсутствует на данном компьютере');
   if RunWORD then
                ShowMessage('WORD запущен на данном компьютере')
                else
                ShowMessage('WORD не запущен на данном компьютере');
   RunWORD;
     }

   if StartWORD then
   begin
    ShowMessage('Процесс запущен');
   end;

end;





procedure TForm1.Button2Click(Sender: TObject);
begin
  if not OpenDialog1.Execute then Exit;  //тут открывается диалог выбора файла, и если пользователь нажал "Cancel", то выходим
 // W:=CreateOLEObject('Word.Application');  //запускается сервер автоматизации
  WRD.visible:=true;     //делаем Ворд видимым
  WRD.Documents.Open(OpenDialog1.FileName);  //Открываем документ, выбранный в диалоге
  DIRFName := OpenDialog1.FileName;
  ShowMessage(DIRFName);   //Показывает директорию открытого файла с именем и расширением
  DIRName:= DIRDetect;
  ShowMessage(DIRName);
  //***********************************Запускаем и открываем EXCEL по заданной директории************************
  Book:=WRD.Documents.Open(OpenDialog1.FileName);
  ActExcelOpenDoc;
  //EXC.Range[EXC.Cells[1, 1], EXC.Cells[5, 3]].Select;

  TableAsPicturePaste;

  //ShowMessage('бук присвоен');
  //Book.Range(1,10).Paste;



end;

 {
procedure DIRDetect;

begin

end;
   }



begin






end.


